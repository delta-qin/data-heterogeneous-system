<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.deltaqin.sys.mapper.SysRemoteDatabasePanalMapper">
  <resultMap id="BaseResultMap" type="com.deltaqin.sys.model.SysRemoteDatabasePanal">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="cid" jdbcType="BIGINT" property="cid" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="db_id" jdbcType="BIGINT" property="dbId" />
    <result column="panal_type_id" jdbcType="BIGINT" property="panalTypeId" />
    <result column="sql_words" jdbcType="VARCHAR" property="sqlWords" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="x" jdbcType="VARCHAR" property="x" />
    <result column="department_id" jdbcType="VARCHAR" property="departmentId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, cid, state, db_id, panal_type_id, sql_words, description, x, department_id
  </sql>
  <select id="selectByExample" parameterType="com.deltaqin.sys.model.SysRemoteDatabasePanalExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_remote_database_panal
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_remote_database_panal
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sys_remote_database_panal
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.deltaqin.sys.model.SysRemoteDatabasePanalExample">
    delete from sys_remote_database_panal
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.deltaqin.sys.model.SysRemoteDatabasePanal">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sys_remote_database_panal (cid, state, db_id, 
      panal_type_id, sql_words, description, 
      x, department_id)
    values (#{cid,jdbcType=BIGINT}, #{state,jdbcType=INTEGER}, #{dbId,jdbcType=BIGINT}, 
      #{panalTypeId,jdbcType=BIGINT}, #{sqlWords,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{x,jdbcType=VARCHAR}, #{departmentId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.deltaqin.sys.model.SysRemoteDatabasePanal">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sys_remote_database_panal
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="cid != null">
        cid,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="dbId != null">
        db_id,
      </if>
      <if test="panalTypeId != null">
        panal_type_id,
      </if>
      <if test="sqlWords != null">
        sql_words,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="x != null">
        x,
      </if>
      <if test="departmentId != null">
        department_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="cid != null">
        #{cid,jdbcType=BIGINT},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="dbId != null">
        #{dbId,jdbcType=BIGINT},
      </if>
      <if test="panalTypeId != null">
        #{panalTypeId,jdbcType=BIGINT},
      </if>
      <if test="sqlWords != null">
        #{sqlWords,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="x != null">
        #{x,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null">
        #{departmentId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.deltaqin.sys.model.SysRemoteDatabasePanalExample" resultType="java.lang.Long">
    select count(*) from sys_remote_database_panal
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sys_remote_database_panal
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.cid != null">
        cid = #{record.cid,jdbcType=BIGINT},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.dbId != null">
        db_id = #{record.dbId,jdbcType=BIGINT},
      </if>
      <if test="record.panalTypeId != null">
        panal_type_id = #{record.panalTypeId,jdbcType=BIGINT},
      </if>
      <if test="record.sqlWords != null">
        sql_words = #{record.sqlWords,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.x != null">
        x = #{record.x,jdbcType=VARCHAR},
      </if>
      <if test="record.departmentId != null">
        department_id = #{record.departmentId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sys_remote_database_panal
    set id = #{record.id,jdbcType=BIGINT},
      cid = #{record.cid,jdbcType=BIGINT},
      state = #{record.state,jdbcType=INTEGER},
      db_id = #{record.dbId,jdbcType=BIGINT},
      panal_type_id = #{record.panalTypeId,jdbcType=BIGINT},
      sql_words = #{record.sqlWords,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      x = #{record.x,jdbcType=VARCHAR},
      department_id = #{record.departmentId,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.deltaqin.sys.model.SysRemoteDatabasePanal">
    update sys_remote_database_panal
    <set>
      <if test="cid != null">
        cid = #{cid,jdbcType=BIGINT},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="dbId != null">
        db_id = #{dbId,jdbcType=BIGINT},
      </if>
      <if test="panalTypeId != null">
        panal_type_id = #{panalTypeId,jdbcType=BIGINT},
      </if>
      <if test="sqlWords != null">
        sql_words = #{sqlWords,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="x != null">
        x = #{x,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null">
        department_id = #{departmentId,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.deltaqin.sys.model.SysRemoteDatabasePanal">
    update sys_remote_database_panal
    set cid = #{cid,jdbcType=BIGINT},
      state = #{state,jdbcType=INTEGER},
      db_id = #{dbId,jdbcType=BIGINT},
      panal_type_id = #{panalTypeId,jdbcType=BIGINT},
      sql_words = #{sqlWords,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      x = #{x,jdbcType=VARCHAR},
      department_id = #{departmentId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>